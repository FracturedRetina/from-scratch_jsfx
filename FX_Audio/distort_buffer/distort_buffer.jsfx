desc:Buffer Distortion

slider1:1<1,24,1>Buffer Size
slider2:0<0,1,1{Flat, Rolling}>Algorithm Type
slider3:0<0,3,1{Constant,Mean,Linear,Random}>Algorithm

in_pin:audio_in_left
in_pin:audio_in_right
out_pin:audio_out_left
out_pin:audio_out_right

@init
gfx_clear = (
  0xB6 * 0x1 +
  0xB6 * 0x100 +
  0xB6 * 0x10000
);

function interp_mean(buffer) (
  new_sample = 0;
  i = 0;
  loop(slider1,
    new_sample += (
      buffer ? buff_samples_r : buff_samples_l
    )[i];
    i += 1;
  );
  new_sample / slider1;
);

function get_sample(buffer) (
  index = slider2 ? (t % slider1) : 0;
  //Flat
  slider3 == 0 ? (
    (buffer ? buff_samples_r : buff_samples_l)[index]
  //Mean
  ) : slider3 == 1 ? (
    slider2 == 1 || (slider2 == 0 && index == 0) ? (
      (buffer ? sample_r : sample_l) = interp_mean(buffer);
    );
    
    (buffer ? sample_r : sample_l);
  //Linear
  ) : slider3 == 2 ? (
    //Calculate slope
    slider2 == 1 || (slider2 == 0 && index == 0) ? (
      buffer ? (
        slope_r = (
          buff_samples_r[slider1 - 1] - buff_samples_r[0]
        ) / slider1;
      ) : (
        slope_l = (
          buff_samples_l[slider1 - 1] - buff_samples_l[0]
        ) / slider1;
      );
    );
    
    buffer ? (
      buff_samples_r[0] + (slope_r * (t % slider1));
    ) : (
      buff_samples_l[0] + (slope_l * (t % slider1));
    );
  //Random
  ) : slider3 == 3 ? (
    slider2 == 1 || (slider2 == 0 && index == 0) ? (
      buffer ? (
        sample_r = buff_samples_r[floor(rand(slider1))];
      ) :  (
        sample_l = buff_samples_l[floor(rand(slider1))];
      );
    );

    (buffer ? sample_r : sample_l);
  );
);

@sample
buff_samples_l[t % slider1] = spl0;
buff_samples_r[t % slider1] = spl1;

spl0 = get_sample(0);
spl1 = get_sample(1);

t += 1;

@gfx
gfx_x = 0;
gfx_y = 0;
gfx_setfont(1, "Arial", 14);
gfx_printf("Buffer Rate: ~%i", srate / slider1);
