desc:Polyphonic Rechanneller

slider1:3<1,16,1>Polyphony
slider2:0<0,1,1{No,Yes}>Enable CC
slider3:3<0,127,1>CC Parameter
slider4:0<0,127,1>CC Value

in_pin:none
out_pin:none

@init
i = 0;
while (i < 16) (
  note_on_channel[i] = -1;
  i += 1;
);

@slider
slider2 ? (
  midisend(0, 0xB0, slider3, slider4);
);

@block
while (midirecv(offset, msg1, msg2, msg3)) (
  msg_type = msg1 & 0xF0;  
  
  //If note on
  msg_type == 0x90 && msg3 != 0 ? (
    i = 0;
    while (i < slider1) (
      //Find empty channel
      note_on_channel[i] == -1 ? (
        midisend(offset, msg_type + i, msg2, msg3);
        note_on_channel[i] = msg2;
        //Break
        i = 17;
      );
      //Increment loop counter
      i += 1;
    );
  //If note off
  ) : (
    //If note on vel=0
    (msg_type == 0x90 && msg3 == 0)
    //If note off
    || msg_type == 0x80
  ) ? (
    i = 0;
    while(i < slider1) (
      //If corresponding note is on
      note_on_channel[i] == msg2 ? (
        midisend(offset, msg_type + i, msg2, msg3);
        note_on_channel[i] = -1;
        //Break
        i = 17;
      );
      //Increment loop counter
      i += 1;
    );
  //Pass through remaining messages on channel 0
  ) : (
    midisend(offset, msg_type, msg2, msg3);
  );
);
